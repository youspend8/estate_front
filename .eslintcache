[{"/Users/imchaehun/workspace/estate/estate_front/src/index.js":"1","/Users/imchaehun/workspace/estate/estate_front/src/App.js":"2","/Users/imchaehun/workspace/estate/estate_front/src/reportWebVitals.js":"3","/Users/imchaehun/workspace/estate/estate_front/src/store/index.js":"4","/Users/imchaehun/workspace/estate/estate_front/src/pages/main.js":"5","/Users/imchaehun/workspace/estate/estate_front/src/components/common/PageFrame/index.js":"6","/Users/imchaehun/workspace/estate/estate_front/src/components/modal/Modal.js":"7","/Users/imchaehun/workspace/estate/estate_front/src/components/modal/trade/TradeInfoModal.js":"8","/Users/imchaehun/workspace/estate/estate_front/src/containers/trade/TradeAggregateContainer.js":"9","/Users/imchaehun/workspace/estate/estate_front/src/store/modules/index.js":"10","/Users/imchaehun/workspace/estate/estate_front/src/store/sagas/index.js":"11","/Users/imchaehun/workspace/estate/estate_front/src/components/common/NaverMap/index.js":"12","/Users/imchaehun/workspace/estate/estate_front/src/store/actions/index.js":"13","/Users/imchaehun/workspace/estate/estate_front/src/components/common/PageFrame/PageFrame.js":"14","/Users/imchaehun/workspace/estate/estate_front/src/components/common/Radio/Radio.js":"15","/Users/imchaehun/workspace/estate/estate_front/src/components/common/table/Table.js":"16","/Users/imchaehun/workspace/estate/estate_front/src/components/common/NaverMap/InfoOverlay.js":"17","/Users/imchaehun/workspace/estate/estate_front/src/store/modules/trade.js":"18","/Users/imchaehun/workspace/estate/estate_front/src/store/sagas/trade.js":"19","/Users/imchaehun/workspace/estate/estate_front/src/components/common/NaverMap/NaverMap.js":"20","/Users/imchaehun/workspace/estate/estate_front/src/components/common/section/index.js":"21","/Users/imchaehun/workspace/estate/estate_front/src/components/common/Button/index.js":"22","/Users/imchaehun/workspace/estate/estate_front/src/lib/util/StringUtil.js":"23","/Users/imchaehun/workspace/estate/estate_front/src/lib/api/trade.js":"24","/Users/imchaehun/workspace/estate/estate_front/src/components/common/section/Section.js":"25","/Users/imchaehun/workspace/estate/estate_front/src/components/common/Button/Button.js":"26","/Users/imchaehun/workspace/estate/estate_front/src/lib/defaultClient.js":"27","/Users/imchaehun/workspace/estate/estate_front/src/store/modules/search.js":"28","/Users/imchaehun/workspace/estate/estate_front/src/store/actions/search.js":"29","/Users/imchaehun/workspace/estate/estate_front/src/components/SearchInput/index.js":"30","/Users/imchaehun/workspace/estate/estate_front/src/components/SearchInput/SearchInput.js":"31"},{"size":765,"mtime":1615620693407,"results":"32","hashOfConfig":"33"},{"size":704,"mtime":1615620693402,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1615620693409,"results":"35","hashOfConfig":"33"},{"size":348,"mtime":1615620693409,"results":"36","hashOfConfig":"33"},{"size":2766,"mtime":1615620693408,"results":"37","hashOfConfig":"33"},{"size":38,"mtime":1615620693404,"results":"38","hashOfConfig":"33"},{"size":1833,"mtime":1615620693406,"results":"39","hashOfConfig":"33"},{"size":7857,"mtime":1615620693407,"results":"40","hashOfConfig":"33"},{"size":2265,"mtime":1615625140404,"results":"41","hashOfConfig":"33"},{"size":347,"mtime":1615620693410,"results":"42","hashOfConfig":"33"},{"size":150,"mtime":1615620693410,"results":"43","hashOfConfig":"33"},{"size":37,"mtime":1615620693403,"results":"44","hashOfConfig":"33"},{"size":719,"mtime":1615620693409,"results":"45","hashOfConfig":"33"},{"size":212,"mtime":1615620693404,"results":"46","hashOfConfig":"33"},{"size":649,"mtime":1615620693404,"results":"47","hashOfConfig":"33"},{"size":787,"mtime":1615620693406,"results":"48","hashOfConfig":"33"},{"size":2133,"mtime":1615620693403,"results":"49","hashOfConfig":"33"},{"size":1355,"mtime":1615620693410,"results":"50","hashOfConfig":"33"},{"size":1410,"mtime":1615620693410,"results":"51","hashOfConfig":"33"},{"size":567,"mtime":1615620693403,"results":"52","hashOfConfig":"33"},{"size":36,"mtime":1615620693406,"results":"53","hashOfConfig":"33"},{"size":35,"mtime":1615620693402,"results":"54","hashOfConfig":"33"},{"size":104,"mtime":1615620693408,"results":"55","hashOfConfig":"33"},{"size":417,"mtime":1615620693408,"results":"56","hashOfConfig":"33"},{"size":454,"mtime":1615620693405,"results":"57","hashOfConfig":"33"},{"size":180,"mtime":1615620693402,"results":"58","hashOfConfig":"33"},{"size":278,"mtime":1615620832613,"results":"59","hashOfConfig":"33"},{"size":950,"mtime":1615624418991,"results":"60","hashOfConfig":"33"},{"size":956,"mtime":1615625526168,"results":"61","hashOfConfig":"33"},{"size":41,"mtime":1615620693405,"results":"62","hashOfConfig":"33"},{"size":1643,"mtime":1615625788844,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1j3dgeu",{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/imchaehun/workspace/estate/estate_front/src/index.js",[],["135","136"],"/Users/imchaehun/workspace/estate/estate_front/src/App.js",["137","138","139","140"],"import React from 'react';\nimport { Route, Router, Switch, withRouter } from 'react-router-dom';\nimport PageFrame from './components/common/PageFrame';\nimport Main from './pages/main';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport './App.scss';\n\nconst App = props => {\n  const { location } = props;\n  return (\n    // <TransitionGroup>\n    //   <CSSTransition\n    //     key={location.key}\n    //     timeout={{ enter: 1000, exit: 1000 }}\n    //     classNames=\"fade\"\n    //   >\n    //   </CSSTransition>\n    // </TransitionGroup>\n    \n    <Switch location={location}>\n      <Route exact path=\"/\" component={Main} />\n    </Switch>\n  );\n}\n\nexport default withRouter(App);\n","/Users/imchaehun/workspace/estate/estate_front/src/reportWebVitals.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/store/index.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/pages/main.js",["141","142","143","144"],"import React, { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport NaverMap from '../components/common/NaverMap';\nimport PageFrame from '../components/common/PageFrame';\nimport TradeInfoModal from '../components/modal/trade/TradeInfoModal';\nimport TradeAggregateContainer from '../containers/trade/TradeAggregateContainer';\nimport { isOpen, setOpen } from '../components/modal/Modal';\nimport { connect } from 'react-redux';\nimport { tradeSearch, tradeStats, tradeStatsPeriod } from '../store/actions';\nimport { bindActionCreators } from 'redux';\n\nconst Main = ({ tradeSearchResult, tradeStatsResult, tradeStatsPeriodResult, tradeSearch, tradeStats, tradeStatsPeriod }) => {\n  const [ isInfoShow, setInfoShow ] = useState(false);\n  const [ modalTitle, setModalTitle ] = useState('');\n\n  const onCloseInfo = e => {\n    setInfoShow(false);\n  }\n\n  const onOpenInfo = query => {\n    setInfoShow(true);\n\n    const { name, type, regionCode, sigunguCode, umdCode, fullname } = query;\n\n    setModalTitle(fullname);\n\n    tradeSearch({\n      name: name,\n      region: regionCode,\n      sigungu: sigunguCode,\n      dong: umdCode,\n      cityType: type,\n      page: 0,\n      size: 10,\n      sortType: 'amount',\n      sortMode: 'desc',\n      tradeType: 'TRADE',\n      fromDate: '2020-10-01',\n      toDate: '2022-11-30'\n    });\n    \n    tradeStats({\n      name: name,\n      region: regionCode,\n      sigungu: sigunguCode,\n      dong: umdCode,\n      cityType: type,\n      tradeType: 'TRADE',\n      fromDate: '2020-10-01',\n      toDate: '2022-11-30'\n    })\n\n    tradeStatsPeriod({\n      name: name,\n      region: regionCode,\n      sigungu: sigunguCode,\n      dong: umdCode,\n      cityType: type,\n      tradeType: 'TRADE',\n      fromDate: '2020-10-01',\n      toDate: '2022-11-30'\n    });\n  }\n\n  return (\n    <PageFrame>\n      <Helmet>\n        <title>제목</title>\n      </Helmet>\n\n      <TradeAggregateContainer onOpenInfo={onOpenInfo} />\n\n      <TradeInfoModal \n        title={modalTitle}\n        isOpen={isInfoShow} \n        onClose={onCloseInfo} \n        tradeStatsResult={tradeStatsResult}\n        tradeSearchResult={tradeSearchResult}\n        tradeStatsPeriodResult={tradeStatsPeriodResult} \n      />\n    </PageFrame>\n  )\n}\n\nconst mapStateToProps = ({ trade }) => ({\n  tradeSearchResult: trade.tradeSearch,\n  tradeStatsResult: trade.tradeStats,\n  tradeStatsPeriodResult: trade.tradeStatsPeriod\n});\n\nconst mapDispatchToProps = dispatch => ({\n  tradeSearch: bindActionCreators(query => tradeSearch(query), dispatch),\n  tradeStats: bindActionCreators(query => tradeStats(query), dispatch),\n  tradeStatsPeriod: bindActionCreators(query => tradeStatsPeriod(query), dispatch),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Main);","/Users/imchaehun/workspace/estate/estate_front/src/components/common/PageFrame/index.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/components/modal/Modal.js",["145"],"import React, { useEffect, useRef, useState } from 'react';\nimport './Modal.scss';\n\nconst Modal = ({ title, children, onClose, isOpen }) => {\n  const modal = useRef();\n  const wrapper = useRef();\n  const background = useRef();\n\n  useEffect(() => {\n    if (isOpen) {\n      modal.current.className = \"modal open bounce\";\n      background.current.className = \"modal_background open\";\n      wrapper.current.className = \"modal_wrapper open\";\n    } else {\n      modal.current.className = \"modal close bounce\";\n      background.current.className = \"modal_background close\"\n      wrapper.current.className = \"modal_wrapper close\"\n    }\n  }, [ isOpen ]);\n\n  const onClickBack = e => back(e);\n  const onClickBackground = e => back(e);\n\n  const back = e => {\n    if (onClose) {\n      onClose(e);\n    }\n  }\n\n  return (\n    <div className=\"modal_wrapper\" ref={wrapper}>\n      <div className=\"modal_background\" ref={background} onClick={onClickBackground}></div>\n      <div className=\"modal\" ref={modal}>\n        <div className=\"modal_inner_wrapper\">\n          <div className=\"modal_header\">\n            <span className=\"modal_back_btn\" onClick={onClickBack}>\n              <svg \n                height=\"26px\" \n                id=\"Layer_1\" \n                style={{enableBackground: 'new 0 0 512 512'}}\n                version=\"1.1\" \n                viewBox=\"0 0 512 512\" \n                xmlns=\"http://www.w3.org/2000/svg\">\n                <polygon points=\"352,128.4 319.7,96 160,256 160,256 160,256 319.7,416 352,383.6 224.7,256 \"/>\n              </svg>\n            </span>\n            <h2 className=\"modal_title\">{ title }</h2>\n            <div style={{width: '50px'}}></div>\n          </div>\n          <div className=\"modal_section\">\n            { children }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal;","/Users/imchaehun/workspace/estate/estate_front/src/components/modal/trade/TradeInfoModal.js",["146","147","148","149"],"import React, { useEffect, useState } from 'react';\nimport Section from '../../common/section';\nimport { Table, TableBody, TableColumn, TableRow } from '../../common/table/Table';\nimport Modal from '../Modal';\nimport './TradeInfoModal.scss';\nimport { Bar } from 'react-chartjs-2';\nimport Button from '../../common/Button';\nimport Radio from '../../common/Radio/Radio';\n\nconst TradeInfoModal = ({ title, isOpen, onClose, tradeSearchResult, tradeStatsResult, tradeStatsPeriodResult }) => {\n  const [ chartCountData, setChartCountData ] = useState([]);\n  const [ chartPriceLabel, setChartPriceData ] = useState([]);\n  const [ chartLabel, setChartLabel ] = useState([]);\n\n  console.log('tradeSearchResult', tradeSearchResult);\n  console.log('tradeStatsResult', tradeStatsResult);\n  console.log('tradeStatsPeriodResult', tradeStatsPeriodResult);\n\n  useEffect(() => {\n    if (tradeStatsPeriodResult.data) {\n      const periodList = tradeStatsPeriodResult.data.periodList;\n      setChartLabel(periodList.map(item => item.date));\n      setChartPriceData(periodList.map(item => item.price));\n      setChartCountData(periodList.map(item => item.count));\n    }\n  }, [ tradeStatsPeriodResult ]);\n\n  return (\n    <Modal title={title} isOpen={isOpen} onClose={onClose}>\n      <div className=\"trade_info\">\n        <Section title={\"날짜별 통계\"}>\n          <Bar data={{\n            labels: chartLabel,\n            datasets: [\n              {\n                type: 'line',\n                label: '거래건수',\n                borderColor: '#00bcd4',\n                borderWidth: 2,\n                pointBackgroundColor: '#00bcd4',\n                pointBorderWidth: 2,\n                fill: false,\n                data: chartCountData,\n                yAxisID: 'y-axis-2',\n              },\n              {\n                type: 'bar',\n                label: '평균가격',\n                backgroundColor: '#ff9c44',\n                data: chartPriceLabel,\n                borderWidth: 0,\n                yAxisID: 'y-axis-1',\n              },\n            ],\n          }} \n          options={{\n            layout: {\n              padding: '10'\n            },\n            legend: {\n              position: 'bottom'\n            },\n            scales: {\n              xAxes: [\n                {\n                  ticks: {\n                    maxRotation: 0,\n                    minRotation: 0,\n                    autoSkip: true,\n                    maxTicksLimit: 10\n                  },\n                }\n              ],\n              yAxes: [\n                {\n                  type: 'linear',\n                  display: true,\n                  position: 'left',\n                  id: 'y-axis-1',\n                  gridLines: {\n                    drawOnArea: false,\n                    display: false\n                  },\n                  ticks: {\n                    beginAtZero: true,\n                  }\n                },\n                {\n                  type: 'linear',\n                  display: true,\n                  position: 'right',\n                  id: 'y-axis-2',\n                  gridLines: {\n                    drawOnArea: false,\n                    display: false\n                  },\n                  ticks: {\n                    beginAtZero: true\n                  }\n                },\n              ],\n            },\n          }} />\n        </Section>\n\n        <Section title={(() => (\n          <>\n            실거래 상세 내역\n            <Radio \n              list={[\n                {\n                  id: 'PRICE',\n                  name: '가격 비싼 순',\n                  value: 'DESC'\n                },\n                {\n                  id: 'TRADE',\n                  name: '거래일 최신 순',\n                  value: 'ASC'\n                }\n              ]}\n              onChange={item => {\n                switch (item.id) {\n                  case 'PRICE':\n                    switch (item.value) {\n                      case 'DESC':\n                        item.name = '가격 싼 순'\n                        item.value = 'ASC';\n                        break;\n                      case 'ASC':\n                        item.name = '가격 비싼 순';\n                        item.value = 'DESC';\n                        break;\n                    }\n                    break;\n                  case 'TRADE': \n                    switch (item.value) {\n                      case 'DESC':\n                        item.name = '거래일 최신 순';\n                        item.value = 'ASC';\n                        break;\n                      case 'ASC':\n                        item.name = '거래일 오래된 순';\n                        item.value = 'DESC';\n                        break;\n                    }\n                    break;\n                }\n              }}\n            />\n          </>\n        ))()} scroll={\"horizontal\"}>\n          <Table \n            headers={[\n              {\n                title: '이름',\n                style: { minWidth: '200px', maxWidth: '400px' }\n              },\n              {\n                title: '거래일',\n                style: { minWidth: '120px' }\n              },\n              {\n                title: '보증금',\n                style: {  minWidth: '75px' }\n              },\n              {\n                title: '건축년도',\n                style: {  minWidth: '75px' }\n              },\n              {\n                title: '면적',\n                style: {  minWidth: '75px' }\n              },\n              {\n                title: '층',\n                style: { minWidth: '50px' }\n              },\n              {\n                title: '시군구',\n                style: {  minWidth: '75px' }\n              },\n              {\n                title: '동',\n                style: { minWidth: '80px' }\n              }\n            ]}\n          >\n            {\n              tradeSearchResult.data ? tradeSearchResult.data.map((item, index) => {\n                return (\n                  <TableRow>\n                    <TableColumn>{ item.name }</TableColumn>\n                    <TableColumn>{ item.deal.dealDate }</TableColumn>\n                    <TableColumn>{ item.amount }</TableColumn>\n                    <TableColumn>{ item.buildYear }</TableColumn>\n                    <TableColumn>{ item.area }</TableColumn>\n                    <TableColumn>{ item.floor }</TableColumn>\n                    <TableColumn>{ item.location.sigungu }</TableColumn>\n                    <TableColumn>{ item.location.dong }</TableColumn>\n                  </TableRow>\n                )\n              }) : ''\n            }\n          </Table>\n        </Section>\n        <div style={{display: 'flex', justifyContent: 'center', margin: '5px 0'}}>\n          <Button onClick={() => {}}>+ 더보기</Button>\n        </div>  \n      \n        <Section title={\"지역별 통계\"}>\n          <Table \n            width={\"100%\"}\n            headers={[\n              {\n                title: '지역',\n                style: { minWidth: '33.3%' }\n              },\n              {\n                title: '평당가격',\n                style: { minWidth: '33.3%' }\n              },\n              {\n                title: '거래건수',\n                style: {  minWidth: '33.3%' }\n              },\n            ]}\n          >\n            {\n              tradeStatsResult.data ? tradeStatsResult.data.cityList.map((item, index) => {\n                return (\n                  <TableRow>\n                    <TableColumn>{ item.dong }</TableColumn>\n                    <TableColumn>{ item.price }</TableColumn>\n                    <TableColumn>{ item.count }</TableColumn>\n                  </TableRow>\n                )\n              }) : ''\n            }\n          </Table>\n        </Section>\n      </div>\n    </Modal>\n  )\n}\n\nexport default TradeInfoModal;","/Users/imchaehun/workspace/estate/estate_front/src/containers/trade/TradeAggregateContainer.js",["150","151"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport NaverMap from '../../components/common/NaverMap';\nimport { tradeAggregate } from '../../store/actions';\nimport InfoOverlay from '../../components/common/NaverMap/InfoOverlay';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport SearchInput from '../../components/SearchInput';\n\nconst TradeAggregateContainer = ({ state, tradeAggs, tradeAggregate, onOpenInfo }) => {\n  const [ map, setMap ] = useState({});\n  const [ overlayList, setOverlayList ] = useState([]);\n\n  const naver = window.naver;\n\n  useEffect(() => {\n    console.log(state)\n    if (overlayList.length != 0) {\n      overlayList.forEach(overlay => {\n        overlay.setMap(null);\n      })\n    }\n\n    if (tradeAggs.data) {\n      const list = [];\n\n      tradeAggs.data.forEach(item => {\n        const { name, amountAverage, count, coordinate } = item;\n        const infoOverlay = new InfoOverlay({\n          map: map,\n          position: new naver.maps.LatLng(coordinate.latitude, coordinate.longitude),\n          content: {\n            city: name,\n            amountAverage: amountAverage,\n            count: count\n          },\n          onClick: () => {\n            onOpenInfo(item);\n          }\n        })\n        list.push(infoOverlay);\n      })\n\n      setOverlayList(() => list);\n    }\n  }, [ tradeAggs ]);\n\n  const onMapChange = map => {\n    const { bounds, center } = map;\n\n    const { _max, _min } = bounds;\n\n    tradeAggregate({\n      eastLong: _max._lng,\n      lat: center._lat,\n      lon: center._lon,\n      northLat: _max._lat,\n      southLat: _min._lat,\n      tradeType: 'TRADE',\n      westLong: _min._lng,\n      zoom: map.zoom,\n    });\n  }\n\n  const onCreateMap = map => {\n    setMap(map);\n    onMapChange(map);\n  }\n\n  return (\n    <>\n      <SearchInput />\n      <NaverMap onCreate={onCreateMap} onIdle={onMapChange} />\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  tradeAggs: state.trade.tradeAggs,\n  state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  tradeAggregate: bindActionCreators(query => tradeAggregate(query), dispatch),\n})\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TradeAggregateContainer));","/Users/imchaehun/workspace/estate/estate_front/src/store/modules/index.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/store/sagas/index.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/components/common/NaverMap/index.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/store/actions/index.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/components/common/PageFrame/PageFrame.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/components/common/Radio/Radio.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/components/common/table/Table.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/components/common/NaverMap/InfoOverlay.js",["152"],"import React from 'react';\nimport { renderToNodeStream, renderToString } from 'react-dom/server';\nimport { numberWithComma } from '../../../lib/util/StringUtil';\n\nconst InfoOverlayWrapper = ({ city, amountAverage, count }) => {\n  const amountFormat = (() => {\n    if (amountAverage >= 10000) {\n      return (amountAverage / 10000).toFixed(1)\n    } else {\n      return (amountAverage / 1000).toFixed(1)\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"info_overlay_city\">\n        { city }\n      </div>\n      <div className=\"info_overlay_content\">\n        <span>\n          { amountFormat }억\n        </span>\n        <span>\n          { numberWithComma(count) }건\n        </span>\n      </div>\n    </>\n  )\n}\n\nexport default class InfoOverlay extends window.naver.maps.OverlayView {\n  constructor(props) {\n    super(props);\n\n    const { map, position, onClick } = props;\n\n    const contentString = renderToString(<InfoOverlayWrapper {...props.content} />);\n\n    const div = document.createElement('div');\n    div.className = 'info_overlay';\n    div.onmouseover = e => {\n      div.className = 'info_overlay bounce';\n    }\n    div.onmouseleave = e => {\n      const { classList } = e.target;\n      if (classList.contains('info_overlay') && classList.contains('bounce')) {\n        div.className = 'info_overlay';\n      }\n    }\n    div.onclick = onClick;\n    div.innerHTML = contentString;\n\n    this._element = div;\n\n    this.setPosition(position);\n    this.setMap(map || null);\n  };\n\n  setPosition = (position) => {\n    this._position = position;\n    this.draw();\n  };\n\n  getPosition = () => {\n    return this._position;\n  };\n\n  onAdd = () => {\n    const overlayLayer = this.getPanes().overlayLayer;\n    overlayLayer.append(this._element);\n  };\n\n  onRemove = () => {\n    this._element.remove();\n  };\n\n  draw = () => {\n    if (!this.getMap()) {\n        return;\n    }\n    const projection = this.getProjection();\n    const position = this.getPosition();\n    const pixelPosition = projection.fromCoordToOffset(position);\n  \n    this._element.style.left = pixelPosition.x + 'px';\n    this._element.style.top = pixelPosition.y + 'px';\n  }\n}","/Users/imchaehun/workspace/estate/estate_front/src/store/modules/trade.js",["153"],"import { handleActions } from 'redux-actions';\nimport { TRADE_AGGREGATE , ON_SUCCESS, ON_FAIL, TRADE_SEARCH, TRADE_STATS_PERIOD, TRADE_STATS } from '../actions'\n\nconst initialState = {\n  tradeAggs: {},\n  tradeSearch: {},\n  tradeStats: {},\n  tradeStatsPeriod: {}\n};\n\nconst reducer = handleActions(\n  {\n    [TRADE_AGGREGATE]: (state, action) => {\n      return {\n        ...state,\n      }\n    },\n    [TRADE_SEARCH]: (state, action) => {\n      return {\n        ...state,\n      }\n    },\n    [TRADE_STATS]: (state, action) => {\n      return {\n        ...state,\n      }\n    },\n    [TRADE_STATS_PERIOD]: (state, action) => {\n      return {\n        ...state,\n      }\n    },\n    [ON_SUCCESS]: (state, { data }) => {\n      const { invoke, result } = data;\n      switch (invoke) {\n        case TRADE_AGGREGATE:\n          return {\n            ...state,\n            tradeAggs: result\n          };\n        case TRADE_SEARCH: \n          return {\n            ...state,\n            tradeSearch: result\n          };\n        case TRADE_STATS: \n          return {\n            ...state,\n            tradeStats: result\n          };\n        case TRADE_STATS_PERIOD: \n          return {\n            ...state,\n            tradeStatsPeriod: result\n          };\n      }\n    },\n    [ON_FAIL]: (state, { data }) => ({\n      ...state,\n    })\n  }, initialState\n)\n\nexport default reducer;","/Users/imchaehun/workspace/estate/estate_front/src/store/sagas/trade.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/components/common/NaverMap/NaverMap.js",["154"],"import React, { useEffect } from 'react';\nimport './NaverMap.scss';\n\nconst NaverMap = ({ onCreate, onIdle }) => {\n  useEffect(() => {\n    const naver = window.naver;\n\n    const mapOptions = {\n      center: new window.naver.maps.LatLng(37.3595704, 127.105399),\n      zoom: 10\n    };\n    \n    const map = new window.naver.maps.Map('map', mapOptions);\n\n    naver.maps.Event.addListener(map, 'idle', function(e) {\n      onIdle(map);\n    });\n\n    onCreate(map);\n  }, [ ]);\n\n  return <div id=\"map\" style={{width: '100%', height: '100vh'}}></div>\n}\n\nexport default NaverMap;","/Users/imchaehun/workspace/estate/estate_front/src/components/common/section/index.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/components/common/Button/index.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/lib/util/StringUtil.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/lib/api/trade.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/components/common/section/Section.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/components/common/Button/Button.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/lib/defaultClient.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/store/modules/search.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/store/actions/search.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/components/SearchInput/index.js",[],"/Users/imchaehun/workspace/estate/estate_front/src/components/SearchInput/SearchInput.js",["155"],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":2,"column":17,"nodeType":"162","messageId":"163","endLine":2,"endColumn":23},{"ruleId":"160","severity":1,"message":"164","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":17},{"ruleId":"160","severity":1,"message":"165","line":5,"column":10,"nodeType":"162","messageId":"163","endLine":5,"endColumn":25},{"ruleId":"160","severity":1,"message":"166","line":5,"column":27,"nodeType":"162","messageId":"163","endLine":5,"endColumn":40},{"ruleId":"160","severity":1,"message":"167","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":26},{"ruleId":"160","severity":1,"message":"168","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":16},{"ruleId":"160","severity":1,"message":"169","line":7,"column":10,"nodeType":"162","messageId":"163","endLine":7,"endColumn":16},{"ruleId":"160","severity":1,"message":"170","line":7,"column":18,"nodeType":"162","messageId":"163","endLine":7,"endColumn":25},{"ruleId":"160","severity":1,"message":"171","line":1,"column":36,"nodeType":"162","messageId":"163","endLine":1,"endColumn":44},{"ruleId":"160","severity":1,"message":"172","line":3,"column":17,"nodeType":"162","messageId":"163","endLine":3,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":123,"column":17,"nodeType":"175","messageId":"176","endLine":148,"endColumn":18},{"ruleId":"173","severity":1,"message":"174","line":125,"column":21,"nodeType":"175","messageId":"176","endLine":134,"endColumn":22},{"ruleId":"173","severity":1,"message":"174","line":137,"column":21,"nodeType":"175","messageId":"176","endLine":146,"endColumn":22},{"ruleId":"177","severity":1,"message":"178","line":18,"column":28,"nodeType":"179","messageId":"180","endLine":18,"endColumn":30},{"ruleId":"181","severity":1,"message":"182","line":46,"column":6,"nodeType":"183","endLine":46,"endColumn":19,"suggestions":"184"},{"ruleId":"160","severity":1,"message":"185","line":2,"column":10,"nodeType":"162","messageId":"163","endLine":2,"endColumn":28},{"ruleId":"173","severity":1,"message":"174","line":35,"column":7,"nodeType":"175","messageId":"176","endLine":56,"endColumn":8},{"ruleId":"181","severity":1,"message":"186","line":20,"column":6,"nodeType":"183","endLine":20,"endColumn":9,"suggestions":"187"},{"ruleId":"160","severity":1,"message":"188","line":30,"column":9,"nodeType":"162","messageId":"163","endLine":30,"endColumn":24},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'PageFrame' is defined but never used.","'TransitionGroup' is defined but never used.","'CSSTransition' is defined but never used.","'useEffect' is defined but never used.","'NaverMap' is defined but never used.","'isOpen' is defined but never used.","'setOpen' is defined but never used.","'useState' is defined but never used.","'TableBody' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'map', 'naver.maps.LatLng', 'onOpenInfo', 'overlayList', and 'state'. Either include them or remove the dependency array. If 'onOpenInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["191"],"'renderToNodeStream' is defined but never used.","React Hook useEffect has missing dependencies: 'onCreate' and 'onIdle'. Either include them or remove the dependency array. If 'onCreate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["192"],"'fetchSearchJson' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},"Update the dependencies array to be: [map, naver.maps.LatLng, onOpenInfo, overlayList, state, tradeAggs]",{"range":"197","text":"198"},"Update the dependencies array to be: [onCreate, onIdle]",{"range":"199","text":"200"},[1399,1412],"[map, naver.maps.LatLng, onOpenInfo, overlayList, state, tradeAggs]",[462,465],"[onCreate, onIdle]"]